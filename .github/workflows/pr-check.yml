name: .NET

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - release/**

jobs:
  Dependencies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore

  Build:
    needs: Dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Build
        run: dotnet build

  Test:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Test
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
          FIREBASE_PROJECTID: ${{ secrets.FIREBASE_PROJECTID }}
          FIREBASE_APIKEY: ${{ secrets.FIREBASE_APIKEY }}
          FIREBASE_AUTHDOMAIN: ${{ secrets.FIREBASE_AUTHDOMAIN }}
        run: dotnet test Client-Api.Tests
  
  Analysis:
    needs: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: SonarScanner for .NET 8 with pull request decoration support
        uses: highbyte/sonarscan-dotnet@v2.3.2
        with:
          # The key of the SonarQube project
          sonarProjectKey: MSPR-Bloc-4_API-Clients
          # The name of the SonarQube project
          sonarProjectName:  API-Clients
          # The name of the SonarQube Organization
          sonarOrganization: mspr-bloc-4
          dotnetBuildArguments: Client-Api.csproj
          # Optional. Set to 1 or true to not run 'dotnet test' command
          dotnetDisableTests: true
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}